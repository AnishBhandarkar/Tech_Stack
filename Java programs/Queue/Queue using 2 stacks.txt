package com.practice;

import java.util.*;

class Queue{
	Stack<Integer> s1 = new Stack<>();
	Stack<Integer> s2 = new Stack<>();
	
	public void enqueue(int data) {
		s1.push(data);
	}
	
	public int dequeue() {
		if(s1.isEmpty()) {
			System.out.println("Empty");
			return -1;
		}
		while(!s1.isEmpty()) {
			s2.push(s1.pop());
		}
		int data = s2.pop();
		while(!s2.isEmpty()) {
			s1.push(s2.pop());
		}
		return data;
	}
	
	public void display() {
		if(s1.isEmpty()) {
			System.out.println("Empty");
			return;
		}
		System.out.println(s1);
		
	}
}


public class Practice1{
	public static void main(String[] args) {
		Queue q = new Queue();
		q.display();
		q.enqueue(10);
		q.enqueue(20);
		q.enqueue(30);
		q.enqueue(40);
		q.enqueue(50);
		q.display();
		System.out.println(q.dequeue());
		q.display();
}





