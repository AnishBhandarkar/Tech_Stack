package com.practice;

class Stack{
	Node top;
	int size;
	
	private class Node{
		private int data;
		private Node next;
		
		Node(int data){
			this.data = data;
		}
	}
	
	Stack(){
		top=null;
		size=0;
	}
	
	public void push(int data) {
		Node node = new Node(data);
		node.next = top;
		top = node;
		size++;
	}
	
	public int pop() {
		if(top==null) {
			return -1;
		}
		int data = top.data;
		top = top.next;
		size--;
		return data;
	}
	
	public void display() {
		if(top==null) {
			System.out.println("Empty");
			return;
		}
		Node temp=top;
		while(temp!=null) {
			System.out.print(temp.data+" ");
			temp=temp.next;
		}
		System.out.println();
	}
	
	public void size() {
		System.out.println(size);
	}
	
	public boolean isEmpty() {
		if(top==null) {
			return true;
		}
		return false;
	}
	
	public int getTop() {
		if(top==null) {
			return -1;
		}
		return top.data;
	}
}

public class Practice1{
	public static void main(String[] args) {
		Stack st = new Stack();
		System.out.println(st.size);
		System.out.println("Pooped val = "+st.pop());
		st.push(20);
		st.push(30);
		st.push(40);
		st.push(50);
		st.display();
		System.out.println("Pooped val = "+st.pop());
		System.out.println(st.isEmpty());
		st.display();
	}
}





